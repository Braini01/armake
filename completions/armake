
_armake()
{
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"

    if [ $COMP_CWORD -eq 1 ]; then
        COMPREPLY=( $( compgen -W '-h --help -h --help -v --version -v --version unpack derapify binarize build' -- $cur) )
    else
        case ${COMP_WORDS[1]} in
            unpack)
            _armake_unpack
        ;;
            derapify)
            _armake_derapify
        ;;
            binarize)
            _armake_binarize
        ;;
            build)
            _armake_build
        ;;
        esac

    fi
}

_armake_unpack()
{
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"

    if [ $COMP_CWORD -ge 2 ]; then
        COMPREPLY=( $( compgen -fW '-f --force ' -- $cur) )
    fi
}

_armake_derapify()
{
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"

    if [ $COMP_CWORD -ge 2 ]; then
        COMPREPLY=( $( compgen -fW '-f --force -d --indent ' -- $cur) )
    fi
}

_armake_binarize()
{
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"

    if [ $COMP_CWORD -ge 2 ]; then
        COMPREPLY=( $( compgen -fW '-f --force -w --warning -i --include ' -- $cur) )
    fi
}

_armake_build()
{
    local cur
    cur="${COMP_WORDS[COMP_CWORD]}"

    if [ $COMP_CWORD -ge 2 ]; then
        COMPREPLY=( $( compgen -fW '-f --force -p --packonly -w --warning -i --include -x --exclude -k --key ' -- $cur) )
    fi
}

complete -o bashdefault -o default -o filenames -F _armake armake